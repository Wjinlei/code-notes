// 内部可变性（Interior mutability）是 Rust 中的一个设计模式
// 它允许你即使在有不可变引用时也可以改变数据，这通常是借用规则所不允许的。
// 为了改变数据，该模式在数据结构中使用 unsafe 代码来模糊 Rust 通常的可变性和借用规则。
// 在不可变值内部改变值就是 内部可变性 模式。
//
// 什么时候用？
// RefCell<T> 正是用于当你确信代码遵守借用规则，而编译器不能理解和确定的时候。
//
// 如下为选择 Box<T>，Rc<T> 或 RefCell<T> 的理由：
// Box<T> 允许在编译时执行不可变或可变借用检查
// Rc<T>仅允许在编译时执行不可变借用检查
// RefCell<T> 允许在运行时执行不可变或可变借用检查。
//
// 说实话，书上这个例子没看懂，算了，这个知识点以后再说

fn main() {
    println!("Hello, world!");
}
